
> mean-grunt@ start /home/macdo/Documents/TUT/Thesis/project/vis-a-vis
> grunt

[4mRunning "less:build" (less) task[24m
[32m>> [39m1 stylesheet created.

[4mRunning "cssmin:build" (cssmin) task[24m
[32m>> [39m1 file created. 32 B â†’ 24 B

[4mRunning "jshint:all" (jshint) task[24m
[32m>> [39m47 files lint free.

[4mRunning "uglify:build" (uglify) task[24m
[32m>> [39m1 file created.

[4mRunning "bower_concat:all" (bower_concat) task[24m
File [36mfrontend/dist/js/_bower.js[39m created.

[4mRunning "mochaTest:test" (mochaTest) task[24m
{ server: { socketOptions: { keepAlive: 1 } },
  replset: { socketOptions: { keepAlive: 1 } } }
getting schema files from fs.
filename found:constructSchema.js
filename found:eventSchema.js


  Main Test Suite
    commonAPI
database connection established on  mongodb://localhost/visuTest
      Common API tests
        âœ“ Should return "Api is running!"
        âœ“ Should return status code 404
    constructAPI
      Construct API tests
        âœ“ Should be able to query the DB for constructs (265ms)
        âœ“ Should create a new object to the DB (102ms)
        âœ“ Shouldn't be able to post duplicate constructs (61ms)
        âœ“ Should create new objects to the DB from list
        âœ“ Shouldn't create duplicate set of constructs to the DB from list
        âœ“ Shouldn't add duplicate constructs when creating constructs from list
        âœ“ Should be able to update the constructs
        âœ“ Should be able to delete the constructs
        âœ“ Should be able to link constructs and events (49ms)
        âœ“ Should be able to link constructs and statechanges (60ms)
        âœ“ Should be able to link constructs and constructs
        âœ“ Should be able to get by source
        âœ“ Should be able to get by source id
        âœ“ Should be able to get related constructs
        âœ“ Should be able to get related events
        âœ“ Should be able to get related statechanges
        âœ“ Should be able to query the DB for constructs with multiple filters
        âœ“ Should be able to query the DB for constructs with events and statechanges within time range
        âœ“ Should be able to query the DB for constructs with events within time range and return empty array
        âœ“ Should be able to query the DB for constructs with free text
        âœ“ Should be able to query the DB for constructs filtering with origin id context
        âœ“ Should be able to query the DB for constructs filtering with origin id free text search
        âœ“ Should be able to query the DB for constructs filtering with time range and free text search (156ms)
    eventAPI
      Event API tests
        âœ“ Should be able to query the DB for events
        âœ“ Should create a new event to the DB
        âœ“ Shouldn't be able to post duplicate events
        âœ“ Should create new events to the DB from list
        âœ“ Shouldn't create duplicate set of events to the DB from list
        âœ“ Shouldn't create duplicate events when adding events to the DB from list
        âœ“ Should be able to update the event
        âœ“ Should be able to delete an event
        âœ“ Should be able to get by source
        âœ“ Should be able to get by source id
        âœ“ Should be able to get related constructs
        âœ“ Should be able to query the DB for events with multiple filters
        âœ“ Should be able to query the DB for events within time range and other free filter.
        âœ“ Should be able to query the DB for events within time range and return empty array
        âœ“ Should be able to query the DB for events with free text
        âœ“ Should be able to query the DB for events filtering with origin id context
        âœ“ Should be able to query the DB for events filtering with origin id free text search
        âœ“ Should be able to query the DB for events filtering with time range and free text search
        âœ“ Should create a new statechange event to the DB
        âœ“ Shouldn't be able to post duplicate statechange events
    origin id
      Origin tests
        âœ“ Should get valid origin_id when construct added has valid origin_id
        âœ“ Should get valid origin_id when event added has valid origin_id
{ [ValidationError: Construct validation failed: origin_id.0.source_id: Path `source_id` is required.]
  errors: 
   { 'origin_id.0.source_id': 
      { [ValidatorError: Path `source_id` is required.]
        message: 'Path `source_id` is required.',
        name: 'ValidatorError',
        properties: [Object],
        kind: 'required',
        path: 'source_id',
        value: undefined,
        reason: undefined,
        '$isValidatorError': true } },
  _message: 'Construct validation failed',
  name: 'ValidationError' }
        âœ“ Should not be able to create construct with invalid source_id field
{ [ValidationError: Event validation failed: origin_id.0.source_id: Path `source_id` is required.]
  errors: 
   { 'origin_id.0.source_id': 
      { [ValidatorError: Path `source_id` is required.]
        message: 'Path `source_id` is required.',
        name: 'ValidatorError',
        properties: [Object],
        kind: 'required',
        path: 'source_id',
        value: undefined,
        reason: undefined,
        '$isValidatorError': true } },
  _message: 'Event validation failed',
  name: 'ValidationError' }
        âœ“ Should not be able to create event with invalid source_id field
after all tests

test DB dropped


  49 passing (2s)


[4mRunning "concurrent:tasks" (concurrent) task[24m
    [4mRunning "watch" task[24m
    Waiting...
    [4mRunning "nodemon:dev" (nodemon) task[24m
    [33m[nodemon] 1.18.4[39m
    [33m[nodemon] to restart at any time, enter `rs`[39m
    [33m[nodemon] watching: *.*[39m
    [32m[nodemon] starting `node server.js`[39m
    { server: { socketOptions: { keepAlive: 1 } },
      replset: { socketOptions: { keepAlive: 1 } } }
    getting schema files from fs.
    filename found:constructSchema.js
    filename found:eventSchema.js
    database connection established on  mongodb://localhost/visu
